5 ESLint rules behave differently from their TSLint counterparts:
  * no-invalid-this:
    - Functions in methods will no longer be ignored.
  * @typescript-eslint/no-unused-expressions:
    - The TSLint optional config "allow-new" is the default ESLint behavior and will no longer be ignored.
  * one-var:
    - Variables declared in for loops will no longer be checked.
  * eqeqeq:
    - Option "smart" allows for comparing two literal values, evaluating the value of typeof and null comparisons.
  * no-underscore-dangle:
    - Leading or trailing underscores (_) on identifiers will now be forbidden.

7 rules are not known by tslint-to-eslint-config to have ESLint equivalents:
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "await-returned-promise".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-blank-lines-func".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-direct-ajax".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-return-any".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-unsafe-any".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "oneliner-object-literal".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "standard-loops".

